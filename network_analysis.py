# -*- coding: utf-8 -*-
"""
Created on Mon May  6 20:28:58 2019

@author: Athan
"""
import networkx as nx
import community

G = nx.Graph()
G.add_node("Index")
G.add_node("Pesti Srácok")
G.add_node("HVG")
G.add_node("Origo")
G.add_node("Vs")
G.add_node("444")
G.add_node("24.hu")

G.add_edge("Index","24.hu", weight =17.3234728)
G.add_edge("Index","Vs", weight =6.362672322)
G.add_edge("Index","HVG", weight =15.50112413)
G.add_edge("Index","Origo", weight =3.022670025)
G.add_edge("Index","444", weight =22.14765101)
G.add_edge("Index","Pesti Srácok", weight =3.307276007)
G.add_edge("Origo","Vs", weight =2.471169687)
G.add_edge("Origo","444", weight =4.480503754)
G.add_edge("Origo","24.hu", weight =3.20486482)
G.add_edge("Origo","Pesti Srácok", weight =6.033519553)
G.add_edge("Origo","HVG", weight =2.883989208)
G.add_edge("Vs","444", weight =3.91198044)
G.add_edge("Vs","24.hu", weight =3.749531309)
G.add_edge("Vs","Pesti Srácok", weight =0.836470096)
G.add_edge("Vs","HVG", weight =3.494909588)
G.add_edge("444","24.hu", weight =13.34772794)
G.add_edge("444","Pesti Srácok", weight =2.295552367)
G.add_edge("444","HVG", weight =13.45649447)
G.add_edge("24.hu","Pesti Srácok", weight =1.19474313)
G.add_edge("24.hu","HVG", weight =12.30283912)
G.add_edge("Pesti Srácok","HVG", weight =2.853820949)

print("links 2014-2018")

print(nx.average_clustering(G,weight="weight"))
part = community.best_partition(G,weight='weight')
part = {'Index': 1, 'Pesti Srácok': 0, 'HVG': 1, 'Origo': 0, 'Vs': 0, '444': 1, '24.hu': 1}
mod = community.modularity(part,G,weight='weight')
print(mod)
part = community.best_partition(G,weight='weight')
mod = community.modularity(part,G,weight='weight')
print(mod)

G = nx.Graph()

G.add_edge("Index","Origo", weight =3.481288077)
G.add_edge("Index","Vs", weight =5.455962588)
G.add_edge("Index","444", weight =16.26472238)
G.add_edge("Index","24.hu", weight =10.5548854)
G.add_edge("Index","Pesti Srácok", weight =4.486316734)
G.add_edge("Index","HVG", weight =11.61290323)
G.add_edge("Origo","Vs", weight =1.344989913)
G.add_edge("Origo","444", weight =1.50981379)
G.add_edge("Origo","24.hu", weight =3.125)
G.add_edge("Origo","Pesti Srácok", weight =4.932182491)
G.add_edge("Origo","HVG", weight =2.767892448)
G.add_edge("Vs","444", weight =3.086419753)
G.add_edge("Vs","24.hu", weight =2.395209581)
G.add_edge("Vs","Pesti Srácok", weight =0.705218618)
G.add_edge("Vs","HVG", weight =1.321003963)
G.add_edge("444","24.hu", weight =12.64559068)
G.add_edge("444","Pesti Srácok", weight =2.606882169)
G.add_edge("444","HVG", weight =13.4061569)
G.add_edge("24.hu","Pesti Srácok", weight =1.159084323)
G.add_edge("24.hu","HVG", weight =8.739780096)
G.add_edge("Pesti Srácok","HVG", weight =2.032520325)

print("links 2016")

print(nx.average_clustering(G,weight="weight"))
part = community.best_partition(G,weight='weight')
part = {'Index': 1, 'Pesti Srácok': 0, 'HVG': 1, 'Origo': 0, 'Vs': 0, '444': 1, '24.hu': 1}
mod = community.modularity(part,G,weight='weight')
print(mod)
part = community.best_partition(G,weight='weight')
print(part)
mod = community.modularity(part,G,weight='weight')
print(mod)

G = nx.Graph()

G.add_edge("Index","Origo", weight =3.47826087)
G.add_edge("Index","Vs", weight =9.015777611)
G.add_edge("Index","444", weight =20.11291461)
G.add_edge("Index","24.hu", weight =21.80355631)
G.add_edge("Index","Pesti Srácok", weight =2.143622722)
G.add_edge("Index","HVG", weight =13.63216266)
G.add_edge("Origo","Vs", weight =4.025044723)
G.add_edge("Origo","444", weight =8.023535705)
G.add_edge("Origo","24.hu", weight =4.441286196)
G.add_edge("Origo","Pesti Srácok", weight =2.887044388)
G.add_edge("Origo","HVG", weight =3.821899484)
G.add_edge("Vs","444", weight =5.922551253)
G.add_edge("Vs","24.hu", weight =5.385556916)
G.add_edge("Vs","Pesti Srácok", weight =2.444987775)
G.add_edge("Vs","HVG", weight =4.608294931)
G.add_edge("444","24.hu", weight =11.63206872)
G.add_edge("444","Pesti Srácok", weight =1.098901099)
G.add_edge("444","HVG", weight = 10.78582435)
G.add_edge("24.hu","Pesti Srácok", weight =0.865800866)
G.add_edge("24.hu","HVG", weight =12.1434623)
G.add_edge("Pesti Srácok","HVG", weight =3.077651515)

print("links 2015")

print(nx.average_clustering(G,weight="weight"))
part = community.best_partition(G,weight='weight')
part = {'Index': 1, 'Pesti Srácok': 0, 'HVG': 1, 'Origo': 0, 'Vs': 0, '444': 1, '24.hu': 1}
mod = community.modularity(part,G,weight='weight')
print(mod)
part = community.best_partition(G,weight='weight')
mod = community.modularity(part,G,weight='weight')
print(mod)

G = nx.Graph()
G.add_edge("Index","Origo", weight =1.273074475)
G.add_edge("Index","Vs", weight =4.457652303)
G.add_edge("Index","444", weight =32.64417845)
G.add_edge("Index","24.hu", weight =17.97385621)
G.add_edge("Index","Pesti Srácok", weight =2.560819462)
G.add_edge("Index","HVG", weight =21.39534884)
G.add_edge("Origo","Vs", weight =0.883392226)
G.add_edge("Origo","444", weight =0.725689405)
G.add_edge("Origo","24.hu", weight =0.594177065)
G.add_edge("Origo","Pesti Srácok", weight =6.927263731)
G.add_edge("Origo","HVG", weight =1.303780965)
G.add_edge("Vs","24.hu", weight =1.27388535)
G.add_edge("Vs","HVG", weight =1.572327044)
G.add_edge("444","24.hu", weight =19.3986421)
G.add_edge("444","Pesti Srácok", weight =2.19138057)
G.add_edge("444","HVG", weight = 18.14058957)
G.add_edge("24.hu","Pesti Srácok", weight =1.792114695)
G.add_edge("24.hu","HVG", weight =17.69165965)
G.add_edge("Pesti Srácok","HVG", weight =3.93442623)

print("links 2017")
print(nx.average_clustering(G,weight="weight"))
part = community.best_partition(G,weight='weight')
part = {'Index': 1, 'Pesti Srácok': 0, 'HVG': 1, 'Origo': 0, 'Vs': 0, '444': 1, '24.hu': 1}
mod = community.modularity(part,G,weight='weight')
print(mod)
part = community.best_partition(G,weight='weight')
mod = community.modularity(part,G,weight='weight')
print(mod)

G = nx.Graph()
G.add_edge("Index","Origo", weight =1.858736059)
G.add_edge("Index","Vs", weight =4.395604396)
G.add_edge("Index","444", weight =43.10344828)
G.add_edge("Index","24.hu", weight =22.22222222)
G.add_edge("Index","Pesti Srácok", weight =4.188481675)
G.add_edge("Index","HVG", weight =37.16814159)
G.add_edge("Origo","Vs", weight =2.666666667)
G.add_edge("Origo","444", weight =2.946954813)
G.add_edge("Origo","24.hu", weight =1.716738197)
G.add_edge("Origo","Pesti Srácok", weight =12.30769231)
G.add_edge("Origo","HVG", weight =1.619433198)
G.add_edge("Vs","24.hu", weight =1.838235294)
G.add_edge("Vs","HVG", weight =3.25732899)
G.add_edge("444","24.hu", weight =29.74828375)
G.add_edge("444","Pesti Srácok", weight =5.574136009)
G.add_edge("444","HVG", weight = 35.50295858)
G.add_edge("24.hu","Pesti Srácok", weight =1.915708812)
G.add_edge("24.hu","HVG", weight =27.52293578)
G.add_edge("Pesti Srácok","HVG", weight =2.692998205)

print("links 2018")

print(nx.average_clustering(G,weight="weight"))
part = community.best_partition(G,weight='weight')
part = {'Index': 1, 'Pesti Srácok': 0, 'HVG': 1, 'Origo': 0, 'Vs': 0, '444': 1, '24.hu': 1}
mod = community.modularity(part,G,weight='weight')
print(mod)
part = community.best_partition(G,weight='weight')
mod = community.modularity(part,G,weight='weight')
print(mod)

G = nx.Graph()
G.add_edge("Pesti Srácok","Vs", weight =0.4)
G.add_edge("Pesti Srácok","Origo", weight =0.14)
G.add_edge("Pesti Srácok","444", weight =0.32)
G.add_edge("Pesti Srácok","Index", weight =0.31)
G.add_edge("Pesti Srácok","24.hu", weight =0.4)
G.add_edge("Pesti Srácok","HVG", weight =0.29)
G.add_edge("Vs","Origo", weight =0.18)
G.add_edge("Vs","444", weight =0.32)
G.add_edge("Vs","Index", weight =0.28)
G.add_edge("Vs","24.hu", weight =0.36)
G.add_edge("Vs","HVG", weight =0.21)
G.add_edge("Origo","444", weight =0.41)
G.add_edge("Origo","Index", weight =0.34)
G.add_edge("Origo","24.hu", weight =0.36)
G.add_edge("Origo","HVG", weight =0.52)
G.add_edge("444","24.hu", weight =0.33)
G.add_edge("444","Index", weight =0.42)
G.add_edge("444","HVG", weight =0.4)
G.add_edge("Index","24.hu", weight =0.45)
G.add_edge("Index","HVG", weight =0.29)
G.add_edge("24.hu","HVG", weight =0.34)


print("vectors 2015")
print(nx.average_clustering(G,weight="weight"))
part = community.best_partition(G,weight='weight')
part = {'Index': 1, 'Pesti Srácok': 0, 'HVG': 1, 'Origo': 0, 'Vs': 0, '444': 1, '24.hu': 1}
mod = community.modularity(part,G,weight='weight')
print(mod)
part = community.best_partition(G,weight='weight')
print(part)
mod = community.modularity(part,G,weight='weight')
print(mod)

G = nx.Graph()
G.add_edge("Pesti Srácok","Vs", weight =0.48)
G.add_edge("Pesti Srácok","Origo", weight =0.45)
G.add_edge("Pesti Srácok","444", weight =0.38)
G.add_edge("Pesti Srácok","Index", weight =0.35)
G.add_edge("Pesti Srácok","24.hu", weight =0.39)
G.add_edge("Pesti Srácok","HVG", weight =0.4)
G.add_edge("Vs","Origo", weight =0.41)
G.add_edge("Vs","444", weight =0.43)
G.add_edge("Vs","Index", weight =0.33)
G.add_edge("Vs","24.hu", weight =0.31)
G.add_edge("Vs","HVG", weight =0.37)
G.add_edge("Origo","444", weight =0.3)
G.add_edge("Origo","Index", weight =0.37)
G.add_edge("Origo","24.hu", weight =0.46)
G.add_edge("Origo","HVG", weight =0.58)
G.add_edge("444","24.hu", weight =0.21)
G.add_edge("444","Index", weight =0.28)
G.add_edge("444","HVG", weight = 0.38)
G.add_edge("Index","24.hu", weight =0.47)
G.add_edge("Index","HVG", weight =0.33)
G.add_edge("24.hu","HVG", weight =0.38)

print("vectors 2016")
print(nx.average_clustering(G,weight="weight"))
part = community.best_partition(G,weight='weight')
part = {'Index': 1, 'Pesti Srácok': 0, 'HVG': 1, 'Origo': 0, 'Vs': 0, '444': 1, '24.hu': 1}
mod = community.modularity(part,G,weight='weight')
print(mod)
part = community.best_partition(G,weight='weight')
print(part)
mod = community.modularity(part,G,weight='weight')
print(mod)

G = nx.Graph()
G.add_edge("Pesti Srácok","Vs", weight =0.45)
G.add_edge("Pesti Srácok","Origo", weight =0.49)
G.add_edge("Pesti Srácok","444", weight =0.4)
G.add_edge("Pesti Srácok","Index", weight =0.38)
G.add_edge("Pesti Srácok","24.hu", weight =0.43)
G.add_edge("Pesti Srácok","HVG", weight =0.32)
G.add_edge("Vs","Origo", weight =0.39)
G.add_edge("Vs","444", weight =0.49)
G.add_edge("Vs","Index", weight =0.42)
G.add_edge("Vs","24.hu", weight =0.44)
G.add_edge("Vs","HVG", weight =0.57 )
G.add_edge("Origo","444", weight =0.43)
G.add_edge("Origo","Index", weight =0.36)
G.add_edge("Origo","24.hu", weight =0.45)
G.add_edge("Origo","HVG", weight =0.38)
G.add_edge("444","24.hu", weight =0.43)
G.add_edge("444","Index", weight =0.48)
G.add_edge("444","HVG", weight = 0.43)
G.add_edge("Index","24.hu", weight =0.4)
G.add_edge("Index","HVG", weight =0.35)
G.add_edge("24.hu","HVG", weight =0.4)


print("vectors 2017")

print(nx.average_clustering(G,weight="weight"))
part = community.best_partition(G,weight='weight')
part = {'Index': 1, 'Pesti Srácok': 0, 'HVG': 1, 'Origo': 0, 'Vs': 0, '444': 1, '24.hu': 1}
mod = community.modularity(part,G,weight='weight')
print(mod)
part = community.best_partition(G,weight='weight')
print(part)
mod = community.modularity(part,G,weight='weight')
print(mod)

G = nx.Graph()
G.add_edge("Pesti Srácok","Vs", weight =0.4)
G.add_edge("Pesti Srácok","Origo", weight =0.5)
G.add_edge("Pesti Srácok","444", weight =0.51)
G.add_edge("Pesti Srácok","Index", weight =0.52)
G.add_edge("Pesti Srácok","24.hu", weight =0.53)
G.add_edge("Pesti Srácok","HVG", weight =0.5)
G.add_edge("Vs","Origo", weight =0.28)
G.add_edge("Vs","444", weight =0.37)
G.add_edge("Vs","Index", weight =0.33)
G.add_edge("Vs","24.hu", weight =0.43)
G.add_edge("Vs","HVG", weight =0.43)
G.add_edge("Origo","444", weight =0.32)
G.add_edge("Origo","Index", weight =0.32)
G.add_edge("Origo","24.hu", weight =0.37)
G.add_edge("Origo","HVG", weight =0.39)
G.add_edge("444","24.hu", weight =0.55)
G.add_edge("444","Index", weight =0.52)
G.add_edge("444","HVG", weight = 0.54)
G.add_edge("Index","24.hu", weight =0.55)
G.add_edge("Index","HVG", weight =0.54)
G.add_edge("24.hu","HVG", weight =0.59)

print("vectors 2018")

print(nx.average_clustering(G,weight="weight"))
part = community.best_partition(G,weight='weight')
part = {'Index': 1, 'Pesti Srácok': 0, 'HVG': 1, 'Origo': 0, 'Vs': 0, '444': 1, '24.hu': 1}
mod = community.modularity(part,G,weight='weight')
print(mod)
part = community.best_partition(G,weight='weight')
print(part)
mod = community.modularity(part,G,weight='weight')
print(mod)

G = nx.Graph()



#G.add_edges_from([("Index","444"),
#                   ("Index","24.hu"),
#                   ("Index","HVG"),
#                   ("444","24.hu"),
#                   ("444","HVG"),
#                   ("24.hu","HVG")])
#


